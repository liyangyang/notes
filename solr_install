==========================================================================
solr install
==========================================================================
1. download solr-4.6.0.tgz from http://ftp.twaren.net/Unix/Web/apache/lucene/solr/4.6.0/,and extract to /data/solr-4.6.0.
2. create directory for solr.
	mkdir -p /data/project_name/solr/war
3. copy solr-4.6.0.war and home template, may be the /war and /home should be same level
	cp -a /data/solr-4.6.0/dist/solr-4.6.0.war /data/project_name/solr/war/
	cp -a /data/solr-4.6.0/example/solr/* /data/project_name/solr/home/
4. copy log related jars to tomcat lib directory.
	cp -a /data/solr-4.6.0/example/lib/ext/* $TOMCAT_HOME/lib/
5. change solr index store dir.
	vim /data/project_name/solr/home/collection1/core.properties
	add:
		solr.data.dir=/data/project_name/solr/home/data
6. Create a Tomcat Context fragment to point docBase to the $SOLR_HOME/solr.war file and solr/home to $SOLR_HOME:
	<Context docBase="/data/project_name/solr/war/solr-4.6.0.war" debug="0" crossContext="true">
			<Environment name="solr/home" type="java.lang.String" value="/data/project_name/solr/home" override="true"/>
	</Context>
	
	Symlink or place the file in $CATALINA_HOME/conf/Catalina/localhost/solr-project_name.xml, where Tomcat will automatically pick it up. 
7. modify the schema.xml in /data/project_name/solr/home/collection1/conf/, and fields of project_name.
	
	
	
	
	
	
==========================================================================
solr master/slave configure
==========================================================================	
1. follow "solr install", set up solr env on a window(master) and linux(repeater) server.
2. use rsync to archive tomcat and solr related folder to other two linux(slave) servers.
	rsync -a /data/apache-tomcat-7.0.42-solr user@ip:/data/
	rsync -a /data/project_name user@ip:/data/
3. modify the solrconfig.xml of master. we set variable name in solrconfig.xml and custom variable value in core.properties, so that we can replicate solrconfig.xml
	<requestHandler name="/replication" class="solr.ReplicationHandler" > 
	<!--
		To enable simple master/slave replication, uncomment one of the 
		sections below, depending on whether this solr instance should be
		the "master" or a "slave".  If this instance is a "slave" you will 
		also need to fill in the masterUrl to point to a real machine.
	-->
		<lst name="master">
			<str name="enable">${enable.master:false}</str>
			<str name="replicateAfter">commit</str>
			<str name="replicateAfter">startup</str>
			<str name="replicateAfter">optimize</str>
			<str name="confFiles">schema.xml,solrconfig.xml</str>
		</lst>

		<lst name="slave">
			<str name="enable">${enable.slave:false}</str>
			<str name="masterUrl">${replicate.master.url:http://ip:port/solr-project_name}</str>
			<str name="pollInterval">00:00:60</str>
		</lst>
	</requestHandler>
4. modify the core.properties of every node.
	master:
		enable.master=true
		enable.slave=false
	repeater:
		enable.master=true
		enable.slave=true
		replicate.master.url=http://ip:port/solr-project_name
	slave:
		enable.master=false
		enable.slave=true
		replicate.master.url=http://ip:port/solr-project_name
5. Because the slave will have some delay, so we need to let the preview request the master node. This mean the app in master should config the httpSolrServer and concurrentUpdateSolrServer to itself.
	
	
	
